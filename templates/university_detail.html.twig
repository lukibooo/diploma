{% extends 'base.html.twig' %}

{% block title %}{{ university.name }}{% endblock %}
{% block stylesheets %}
  <link rel="stylesheet" href="{{ asset('css/university.show.css') }}">
{% endblock %}

{% block content %}
    <a href="{{ backUrl }}" class="back-button">← Повернутись</a>
    <section class="university-detail">
        <svg class="star-icon"
             data-id="{{ selectedSpecialty.id }}"
             data-favorite="{{ app.user.favoriteSpecialties.contains(selectedSpecialty.name) ? 'true' : 'false' }}"
             xmlns="http://www.w3.org/2000/svg"
             width="24" height="24" viewBox="0 0 24 24"
             fill="{{ app.user.favoriteSpecialties.contains(selectedSpecialty.name) ? '#ffc107' : 'none' }}"
             stroke="#ffc107" stroke-width="2"
             stroke-linecap="round" stroke-linejoin="round"
             style="cursor: pointer; margin-left: 8px;">
            <polygon points="12 2 15 8.5 22 9.3 17 14.1 18.5 21 12 17.8 5.5 21 7 14.1 2 9.3 9 8.5 12 2"/>
        </svg>
    <h1>{{ university.name }}</h1>

  <div class="description">{{ university.description }}</div>
    <p class="city">Місто: {{ university.city.name }}, {{ university.city.region.name }} область</p>

  <div class="highlighted-specialty">
    <h2>Обрана спеціальність</h2>
    <p class="spec-title">{{ selectedSpecialty.code }} – {{ selectedSpecialty.name }}</p>
      {% for price in selectedSpecialty.specialtyPrice %}
          {% if price.university.id == university.id %}
              <p class="price">Ціна: {{ price.price }} грн/рік</p>
          {% endif %}
      {% endfor %}

    <h3>Предмети та коефіцієнти</h3>
    <ul class="subjects">
      {% for number in selectedSpecialty.numbers %}
          <li>
              {% for subj in number.subjects %}
                  {{ subj.name }} – {{ number.value }}
              {% endfor %}
          </li>
      {% endfor %}
    </ul>
  </div>

  <div class="other-specialties">
    <h2>Інші спеціальності</h2>
    {% for specialty in otherSpecialties %}
      <div class="spec-card">
        <p class="spec-title">{{ specialty.code }} – {{ specialty.name }}</p>
          {% for price in specialty.specialtyPrice %}
              {% if price.university.id == university.id %}
                  <p class="price">Ціна: {{ price.price }} грн/рік</p>
              {% endif %}
          {% endfor %}
      </div>
    {% endfor %}
  </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                document.querySelectorAll('.uni-title .star-icon').forEach(star => {
                    star.addEventListener('click', function (e) {
                        e.stopPropagation();

                        const id = this.dataset.id;
                        const isFavorite = this.dataset.favorite === 'true';

                        fetch(`/specialty/${id}/toggle-favorite`, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest',
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(res => res.json())
                            .then(data => {
                                this.dataset.favorite = data.favorite;
                                this.setAttribute('fill', data.favorite ? '#ffc107' : 'none');
                            });
                    });
                });
            });
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const star = document.querySelector('.star-icon');
                if (!star) return;

                star.addEventListener('click', function (e) {
                    e.stopPropagation();

                    const id = this.dataset.id;
                    const isFavorite = this.dataset.favorite === 'true';

                    fetch(`/specialty/${id}/toggle-favorite`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(res => res.json())
                        .then(data => {
                            this.dataset.favorite = data.favorite;
                            this.setAttribute('fill', data.favorite ? '#ffc107' : 'none');
                        });
                });
            });
        </script>
</section>
{% endblock %}
